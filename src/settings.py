"""
Django settings for src project.

Generated by 'django-admin startproject' using Django 5.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-6sq=9@9ykg^1$$&!*hq6(#0q6$w@ejegu+2qvx@u#zl%4=(3^-'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['http://127.0.0.1:5500/', '127.0.0.1','http://127.0.0.1:5000/']


# Application definition

INSTALLED_APPS = [
    # Third-party apps
    'rest_framework',
    'drf_yasg',
    'channels',
    'corsheaders',
    'daphne',

    # Built-in apps
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # Custom apps
    'rt_crud',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware', # Add this line at the top
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware', # Add WhiteNoise middleware here
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'src.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# Channel configuration
CHANNEL_LAYERS = {
    'default': {
        'BACKEND': 'channels_redis.core.RedisChannelLayer',
        'CONFIG': {
            "hosts": [("127.0.0.1", 6379)],
        },
    },
}

# Cors configuration
# CORS_ALLOWED_ORIGINS =True
CORS_ALLOWED_ORIGINS = [
    # "http://192.168.1.141:8000",  # Example IP address
    # "http://192.168.1.143:3000",       # Example for localhost
    "http://192.168.1.143:3000",       # Example for localhost
    # "http://127.0.0.1:8000",       # Example for localhost
    "http://127.0.0.1:5501",       # Example for localhost
    "http://127.0.0.1:5000",       # Example for localhost
]

CORS_ALLOW_HEADERS = [ 'content-type', ] 
CORS_ALLOW_METHODS = [ 'DELETE', 'GET', 'OPTIONS', 'PATCH', 'POST', 'PUT', ] 
CORS_ALLOW_CREDENTIALS = True

# Spectacular configuration
SWAGGER_SETTINGS = { 
                    'USE_SESSION_AUTH': True, 
                    'LOGIN_URL': 'rest_framework:login', 
                    'LOGOUT_URL': 'rest_framework:logout', 
                    'SECURITY_DEFINITIONS': { 
                                                'basic': { 'type': 'basic' }, 
                                                'apiKey': { 'type': 'apiKey', 'name': 'Authorization', 'in': 'header' },
                                        },
}

# Rest framwork configuration
REST_FRAMEWORK = { 'DEFAULT_SCHEMA_CLASS': 'rest_framework.schemas.coreapi.AutoSchema' }

WSGI_APPLICATION = 'src.wsgi.application'
ASGI_APPLICATION = 'src.asgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'
STATIC_ROOT = BASE_DIR / 'staticfiles'  # Ensure this is the correct path to your static files

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Log configuration
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {module} {message}',
            'style': '{',
        },
    },
    'handlers': {
        'file': {
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'filename': './channels.log',
            'formatter': 'verbose',
        },
        'websocket': {
            'level': 'INFO',
            'class': 'src.log_handler.WebSocketLogHandler',
            'formatter':'verbose',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['file'],
            'level': 'INFO',
            'propagate': False
        },
        'rt_crud':{
            'handlers': ['websocket', 'file'],
            'level': 'INFO',
            'propagate': False
        },
        'consumers': { 
            'handlers': ['file'], 
            'level': 'DEBUG', 
            'propagate': False, 
        },
    },
}



